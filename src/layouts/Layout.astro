---
import { SITE } from "@config";
import "@styles/base.css";
import { ViewTransitions } from "astro:transitions";
import { getImagePath } from "astro-opengraph-images";
import Header, { type NavItem } from "@components/Header.astro";
import Footer from "@components/Footer.astro";

export interface Props {
  title?: string,
  ogTitle?: string,
  description?: string,
  published?: Date,
  modified?: Date,
  scrollSmooth?: boolean,
  activeNav?: NavItem,
}

const {
  title = SITE.title,
  ogTitle = title,
  description = SITE.description,
  published,
  modified,
  scrollSmooth = false,
  activeNav,
} = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site).href;

const ogImage = getImagePath({ url: Astro.url, site: Astro.site });

const structuredData = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  headline: title,
  image: ogImage,
  datePublished: published?.toISOString(),
  ...(modified && { dateModified: modified.toISOString() }),
  author: [{
    "@type": "Person",
    name: SITE.author,
    url: SITE.profile,
  }],
};
---

<!doctype html>
<html lang="en" class={`${scrollSmooth && "scroll-smooth"}`}>
  <head>
    <meta charset="UTF-8"/>
    <meta name="viewport" content="width=device-width"/>
    <link rel="icon" type="image/png" href="/favicon.png"/>
    <link rel="canonical" href={canonicalURL}/>
    <meta name="generator" content={Astro.generator}/>

    <!-- General Meta Tags -->
    <title>{title}</title>
    <meta name="title" content="article"/>
    <meta name="description" content={description}/>
    <meta name="author" content={SITE.author}/>
    <link rel="sitemap" href="/sitemap-index.xml"/>

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content={title}/>
    <meta property="og:title" content={ogTitle}/>
    <meta property="og:description" content={description}/>
    <meta property="og:url" content={canonicalURL}/>
    <meta property="og:image" content={ogImage}/>
    <meta property="og:site_name" content={SITE.title}/>

    <!-- Article Published/Modified time -->
    {published && <meta property="article:published_time" content={published.toISOString()}/>}
    {modified && <meta property="article:modified_time" content={modified.toISOString()}/>}

    <!-- X -->
    <meta property="twitter:card" content="summary_large_image"/>
    <meta property="twitter:url" content={canonicalURL}/>
    <meta property="twitter:title" content={ogTitle}/>
    <meta property="twitter:description" content={description}/>
    <meta property="twitter:image" content={ogImage}/>

    <!-- Google JSON-LD Structured data -->
    <script
      type="application/ld+json"
      set:html={JSON.stringify(structuredData)}
      is:inline
    />

    <link rel="preload" href="/fonts/recursive.woff2" as="font" type="font/woff2"/>
    <link rel="preload" href="/fonts/fafo-nihongo.ttf" as="font" type="font/ttf"/>

    <meta name="theme-color" content=""/>

    <ViewTransitions/>

    <script is:inline src="/toggleTheme.js"/>
  </head>
  <body>
    <Header {activeNav}/>
    <slot/>
    <Footer/>

    <script is:inline>
      document.querySelector("main").id = "main-content";
    </script>
  </body>
</html>
