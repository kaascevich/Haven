---
import { LOCALE, SITE } from "@config";
import "@styles/base.css";
import { ViewTransitions } from "astro:transitions";
import { getImagePath } from "astro-opengraph-images";

export interface Props {
  title?: string;
  ogTitle?: string;
  author?: string;
  profile?: string;
  description?: string;
  canonicalURL?: string;
  pubDatetime?: Date;
  modDatetime?: Date | null;
  scrollSmooth?: boolean;
}

const {
  title = SITE.title,
  ogTitle = title,
  author = SITE.author,
  profile = SITE.profile,
  description = SITE.desc,
  canonicalURL = new URL(Astro.url.pathname, Astro.site).href,
  pubDatetime,
  modDatetime,
  scrollSmooth = false,
} = Astro.props;

const ogImage = getImagePath({ url: Astro.url, site: Astro.site });

const structuredData = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  headline: `${title}`,
  image: `${ogImage}`,
  datePublished: `${pubDatetime?.toISOString()}`,
  ...(modDatetime && { dateModified: modDatetime.toISOString() }),
  author: [
    {
      "@type": "Person",
      name: `${author}`,
      url: `${profile}`,
    },
  ],
};
---

<!doctype html>
<html
  lang=`${LOCALE.lang ?? "en"}`
  class={`${scrollSmooth && "scroll-smooth"}`}
>
  <head>
    <meta charset="UTF-8"/>
    <meta name="viewport" content="width=device-width"/>
    <link rel="icon" type="image/png" href="/favicon.png"/>
    <link rel="canonical" href={canonicalURL}/>
    <meta name="generator" content={Astro.generator}/>

    <!-- General Meta Tags -->
    <title>{title}</title>
    <meta name="title" content="article"/>
    <meta name="description" content={description}/>
    <meta name="author" content={author}/>
    <link rel="sitemap" href="/sitemap-index.xml"/>

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content={title}/>
    <meta property="og:title" content={ogTitle}/>
    <meta property="og:description" content={description}/>
    <meta property="og:url" content={canonicalURL}/>
    <meta property="og:image" content={ogImage}/>
    <meta property="og:site_name" content={SITE.title}/>

    <!-- Article Published/Modified time -->
    {
      pubDatetime && (
        <meta
          property="article:published_time"
          content={pubDatetime.toISOString()}
        />
      )
    }
    {
      modDatetime && (
        <meta
          property="article:modified_time"
          content={modDatetime.toISOString()}
        />
      )
    }

    <!-- X -->
    <meta property="twitter:card" content="summary_large_image"/>
    <meta property="twitter:url" content={canonicalURL}/>
    <meta property="twitter:title" content={ogTitle}/>
    <meta property="twitter:description" content={description}/>
    <meta property="twitter:image" content={ogImage}/>

    <!-- Google JSON-LD Structured data -->
    <script
      type="application/ld+json"
      set:html={JSON.stringify(structuredData)}
    />

    <meta name="theme-color" content=""/>

    <ViewTransitions/>

    <script is:inline src="/toggle-theme.js" async/>
  </head>
  <body>
    <slot/>
  </body>
</html>
